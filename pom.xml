<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example</groupId>
	<artifactId>helloworld</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>helloworld Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<properties>
        <jdk.version>1.6</jdk.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- all tests are run by default. -->
        <skip.integration.tests>false</skip.integration.tests>
        <skip.unit.tests>false</skip.unit.tests>
        <test.server.portX>8080</test.server.portX>
        <cobertura.version>2.5.2</cobertura.version>
        <jetty.version>9.2.3</jetty.version>
        <!-- <jetty.version>7.2.2.v20101205</jetty.version> -->
        <cobertura.tool.version>1.9.4.1</cobertura.tool.version>
        <cobertura.instrumentation.phase>prepare-package</cobertura.instrumentation.phase>
    </properties>

    <repositories>
        <repository>
            <id>springsource-repo</id>
            <name>SpringSource Repository</name>
            <url>http://repo.springsource.org/release</url>
        </repository>
    </repositories>

	<build>
		<finalName>helloworld</finalName>
		
		<plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>reserve-network-port</id>
                        <goals><goal>reserve-network-port</goal></goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <portNames>
                                <portName>test.server.port</portName>
                                <portName>test.server.port2</portName>
                                <portName>test.server.another</portName>
                                <portName>jetty.shutdown.listener</portName>
                            </portNames>
                        </configuration>
                    </execution>
                    <!--
                        States that the plugin's add-test-source goal is executed at generate-test-sources phase.
                    -->
                    <execution>
                        <id>add-integration-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals><goal>add-test-source</goal></goals>
                        <configuration>
                            <!-- Configures the source directory of integration tests. -->
                            <sources>
                                <source>src/integration-test/java</source>
                                <source>src/functional-test</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- Used for unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.15</version>
                <configuration>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Excludes integration tests when unit tests are run. -->
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Used for integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.15</version>
                <executions>
                    <!--
                        Ensures that both integration-test and verify goals of the Failsafe Maven plugin are executed.
                    -->
                    <execution>
                        <id>integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*IntegrationTestX.java</include>
                            </includes>
                            <!-- Skips integration tests if the value of skip.integration.tests property is true -->
                            <skipTests>${skip.integration.tests}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>

    <reporting>
        <plugins>
            <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${surefire.reportplugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${cobertura.version}</version>
                <configuration>
                    <formats>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>
            -->
        </plugins>
    </reporting>

    <profiles>
        <!--
			Use -Pwith-jetty to have a jetty server startup before the integration tests run
		-->
		<profile>
			<id>with-jetty</id>
			<build>
				<plugins>

                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <configuration>
                            <jvmArgs>-Djetty.port=${test.server.port}</jvmArgs>
                            <maxStartupLines>100</maxStartupLines>
                            <waitForChild>false</waitForChild>
                            <scanIntervalSeconds>5</scanIntervalSeconds>
                            <stopPort>${jetty.shutdown.listener}</stopPort>
                            <stopKey>foo</stopKey>
                            <daemon>true</daemon>
                            <classesDirectory>target/generated-classes/cobertura</classesDirectory>
                            <webApp>
                                <contextPath>/helloworld</contextPath>
                            </webApp>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-jetty</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run-forked</goal>
                                </goals>
                                <configuration>
                                    <httpConnector>
                                        <port>${test.server.port}</port>
                                    </httpConnector>
                                </configuration>
                            </execution>
                            <!--
                            <execution>
                                <id>start-jetty</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>

                                <configuration>
                                    <connectors>
                                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                                            <port>${test.server.port}</port>
                                            <maxIdleTime>60000</maxIdleTime>
                                        </connector>
                                    </connectors>
                                    <httpConnector>
                                        <port>${test.server.port}</port>
                                    </httpConnector>
                                </configuration>
                            </execution>
                            -->
                            <execution>
                                <id>stop-jetty</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

				</plugins>
			</build>
		</profile>
        <!--
			Use -Pwith-tomcat to have a tomcat server startup before the integration tests run
		-->
        <profile>
            <id>with-tomcat</id>
            <!--<activation>
                <property>
                    <name>!skip.integration.tests</name>
                </property>
            </activation> -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.tomcat.maven</groupId>
                        <artifactId>tomcat6-maven-plugin</artifactId>
                        <version>2.2</version>
                        <executions>
                            <execution>
                                <id>tomcat-run</id>
                                <goals>
                                    <goal>run-war-only</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <fork>true</fork>
                                    <!-- http port -->
                                    <port>${test.server.port}</port>
                                    <!-- application path always starts with /-->
                                    <path>/helloworld</path>
                                    <!-- optional path to a context file -->
                                    <contextFile>${tomcatContextXml}</contextFile>
                                    <systemProperties>
                                        <property>
                                            <name>launchpad.http.server.url</name>
                                            <value>http://localhost:${test.server.port}/${project.build.finalName}</value>
                                        </property>
                                        <property>
                                            <name>launchpad.webdav.server.url</name>
                                            <value>http://localhost:${test.server.port}/${project.build.finalName}</value>
                                        </property>
                                    </systemProperties>
                                </configuration>
                            </execution>
                            <execution>
                                <id>tomcat-shutdown</id>
                                <goals>
                                    <goal>shutdown</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
			Use -Pwith-robot to have a robot execute functional tests in the integration tests phase
		-->
        <profile>
            <id>with-robot</id>
            <build>
                <plugins>

                    <plugin>
                        <groupId>org.robotframework</groupId>
                        <artifactId>robotframework-maven-plugin</artifactId>
                        <version>1.4.2</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.github.markusbernhardt</groupId>
                                <artifactId>robotframework-selenium2library-java</artifactId>
                                <version>1.4.0.6</version>
                                <scope>compile</scope>
                            </dependency>
                            <!--
                            <dependency>
                                <groupId>org.robotframework</groupId>
                                <artifactId>robotframework</artifactId>
                                <version>2.8.4</version>
                            </dependency>
                            -->
                        </dependencies>
                        <configuration>
                            <skip>false</skip>
                            <testCasesDirectory>${project.basedir}/src/functional-test/tests/</testCasesDirectory>
                            <variables>
                                <variable>LANG:EN</variable>
                                <variable>APP_URL:http://localhost:${test.server.port}</variable>
                            </variables>
                            <logLevel>DEBUG</logLevel>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <!--
            Use -Pwith-cargo to have cargo setup a jetty server at startup before the integration tests run
        -->
        <profile>
            <id>with-cargo</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>1.1.0</version>
                        <configuration>
                            <wait>false</wait>
                            <container>
                                <containerId>jetty7x</containerId>
                                <artifactInstaller>
                                    <groupId>org.eclipse.jetty</groupId>
                                    <artifactId>jetty-distribution</artifactId>
                                    <!-- <version>${jetty.version}</version> -->
                                </artifactInstaller>
                            </container>
                            <configuration>
                                <properties>
                                    <cargo.servlet.port>${test.server.port}</cargo.servlet.port>
                                </properties>
                            </configuration>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>cobertura</id>
            <activation>
                <property>
                    <name>cobertura</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>net.sourceforge.cobertura</groupId>
                    <artifactId>cobertura</artifactId>
                    <optional>true</optional>
                    <version>${cobertura.tool.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>cobertura-maven-plugin</artifactId>
                        <version>${cobertura.version}</version>
                        <configuration>
                            <formats>
                                <format>xml</format>
                                <format>html</format>
                            </formats>
                        </configuration>
                        <executions>
                            <execution>
                                <id>instrument-code</id>
                                <phase>${cobertura.instrumentation.phase}</phase>
                                <goals>
                                    <goal>instrument</goal>
                                </goals>
                                <configuration>
                                    <attach>true</attach>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Add cobertura as dependency to the jetty-plugin (required for instrumented classes) -->
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>maven-jetty-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.mojo</groupId>
                                <artifactId>cobertura-maven-plugin</artifactId>
                                <version>${cobertura.version}</version>
                                <type>jar</type>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>net.sourceforge.cobertura</groupId>
                                <artifactId>cobertura</artifactId>
                                <version>${cobertura.tool.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>post-integration-test</phase>
                                <id>cobertura-report</id>
                                <configuration>
                                    <tasks>
                                        <taskdef classpathref="maven.runtime.classpath"
                                                 resource="tasks.properties" />
                                        <mkdir dir="${project.build.directory}/site/cobertura" />
                                        <cobertura-report format="xml"
                                                          datafile="${project.build.directory}/cobertura/cobertura.ser"
                                                          destdir="${project.build.directory}/site/cobertura"
                                                          srcdir="${project.basedir}/src/main/java" />
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
	</profiles>


	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
			<version>2.5.6</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>2.5.6</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>2.5.6</version>
		</dependency>

		<dependency>
			<scope>provided</scope>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.2</version>
		</dependency>

  		<dependency>
    		<groupId>org.seleniumhq.selenium</groupId>
    		<artifactId>selenium-server</artifactId>
    		<version>2.40.0</version>
  		</dependency>		

	</dependencies>
</project>
